:root {
  --oslometgul: #ffd500;
}

header {
  min-width: 100%;
  background-color: var(--oslometgul);
}

body {
  background-color: #F7FFF7;
  margin: 0;
}

footer {
  background-color: lightblue;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.footer-upper-wrapper {
  flex-direction: column;
  align-items: center;
}

.footer-lower-wrapper,
.footer-upper-wrapper {
  display: flex;
  width: 100%;
  justify-content: space-evenly;
  margin-top: 1em;
  margin-bottom: 1em;
}


.footer-lower-wrapper>* {
  display: flex;
  flex-direction: column;
  justify-content: start;
  margin-top: 1em;
  margin-bottom: 1em;
}

.footer-useful-links-box>a, .footer-social-media-links-box > a, .footer-contact-information-box > a {
  /* Adjusted for Lighthouse, which made the claim that touch controls might have difficulty differentiating links */
  margin: 0.5em;
}


/* Phone scaling */
@media all and (max-width: 680px) {
  header {
    min-height: 160px;
  }

  .footer-lower-wrapper {
    display: inline;
  }


  .info-snippet-container:nth-child(odd) {
    /* Makes sure the borders don't overlap on mobile */
    border-top-style: solid;
    border-top-width: 1px;
    border-top-color: black;
    border-bottom-style: solid;
    border-bottom-color: black;
    border-bottom-width: 1px;
  }

  .info-snippet-container>h3 {
    margin-left: 0.25em;
  }

  .info-snippet-container>p {
    margin-left: 0.5em;
  }

}


/* Widescreen scaling */
@media all and (min-width: 680px) {
  header {
    min-height: 180px;
  }

  aside {
    margin: 1em;
  }

  .basic-info-container {
    display: grid;
    grid-template-rows: repeat(3, 1fr);
    grid-template-columns: repeat(3, auto);
    justify-content: space-around;
  }

  .info-snippet-container>p {
    margin-left: 0.25em;
  }

  .info-snippet-container {
    /* Makes sure the borders don't overlap on widescreens in display: grid; */
    border-top-style: solid;
    border-top-width: 1px;
    border-top-color: black;

  }

  .info-snippet-container:nth-child(n+5):nth-child(-n+7) {
    /*Adjusted answer from here: https://stackoverflow.com/a/56315469, see comment in previous block for reasoning. */
    border-bottom-style: solid;
    border-bottom-color: black;
    border-bottom-width: 1px;
  }


  .course-faq-container {
    display: grid;
    justify-items: center;
    min-width: 0;
    min-height: 0;
    column-gap: 1em;
    row-gap: 5em;
    grid-template-rows: auto auto auto auto;
    grid-template-columns: 1fr 1fr;
  }

  
}

@media all and (min-width: 1280px) {
  .introduction-container {
    margin-top: 1em;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .course-faq-container {
    display: grid;
    justify-items: center;
    min-width: 0;
    min-height: 0;
    column-gap: 1em;
    row-gap: 5em;
    grid-template-rows: auto auto;
    grid-template-columns: 1fr 1fr 1fr 1fr;
  }
}


.course-faq-container {
  height: auto;
}

.faq-toggle-header {
  display: flex;
  max-width: fit-content;
  align-items: center;
  justify-content: end;


}

.faq-toggle-header>svg {
  margin-left: 1em;
  margin-right: 1em;
  width: 1em;
  height: auto;
}

.faq-toggle-header>h3 {
  position: relative;
}

.faq-dropdown-toggle {
  -webkit-appearance: none;
  appearance: none;
}

.faq-dropdown-content {
  display: none;
  transition: all .3s linear;
  margin-left: 1em;
  margin-right: 1em;

}


.faq-single-question-wrapper {
  width: 100%;


}


/* This block requires a slightly annoying HTML structure to work, but is quite simple, from my understanding, it selects the next sibling of the type specified, unfortunately that means the .faq-dropdown-toggle can't be a part of the .faq-toggle-header. Code taken from here: https://stackoverflow.com/questions/44832572/pure-css-clickable-dropdown  */
.faq-dropdown-toggle:checked~.faq-dropdown-content {
  display: block;
}

/* Using the same logic above for getting the checked, although a bit hacky selector-wise */
.faq-dropdown-toggle:checked~label>svg>path:nth-child(1) {
  transition: all .2s ease-in-out;
  transform: rotate(90deg);
  transform-origin: center;

}

label>svg>path:nth-child(1) {
  transition: all .2s ease-in-out;
}